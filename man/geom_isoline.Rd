% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GeomIsoline.R
\name{geom_isoline}
\alias{geom_isoline}
\title{Stoichiometric isolines: diagonal}
\usage{
geom_isoline(
  mapping = NULL,
  data = NULL,
  ...,
  ratio,
  na.rm = FALSE,
  show.legend = NA
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by [aes()] or [aes_()].}

\item{ratio}{Parameters that control the
position of the line. If these are set, `data`, `mapping` and
`show.legend` are overridden.}
}
\description{
This geoms add reference lines (sometimes called rules) to a plot.
These are useful for annotating plots.
}
\details{
These geoms act slightly differently from other geoms. You can supply the
parameters in two ways: either as arguments to the layer function,
or via aesthetics. If you use arguments, e.g.
`geom_isoline(ratio = 30)`, then behind the scenes
the geom makes a new data frame containing just the data you've supplied.
That means that the lines will be the same in all facets; if you want them
to vary across facets, construct the data frame yourself and use aesthetics.

Unlike most other geoms, these geoms do not inherit aesthetics from the plot
default, because they do not understand x and y aesthetics which are
commonly set in the plot. They also do not affect the x and y scales.
}
\section{Aesthetics}{

These geoms are drawn using with [geom_line()] so support the
same aesthetics: `alpha`, `colour`, `linetype` and
`size`. They also each have aesthetics that control the position of
the line:

  - `geom_isolineNP()`: `ratio`
}

\examples{
p <- ggplot(mtcars, aes(wt, mpg)) + geom_point()

# Fixed values
p + geom_isoline(ratio = 5)

p + geom_isoline() # Can't see it - outside the range of the data
p + geom_isoline(ratio = 20)

# Redfield ratio N:P isoline 16:1 fit
p + geom_isoline(ratio = 16)
# But this is easier to do with geom_smooth:

# To show different lines in different facets, use aesthetics
p <- ggplot(mtcars, aes(mpg, wt)) +
  geom_point() +
  facet_wrap(~ cyl)

mean_stoic <- data.frame(cyl = c(4, 6, 8), wt = c(2.28, 3.11, 4.00))
p + geom_isoline(aes(yintercept = wt), mean_wt)

# You can also control other aesthetics
ggplot(mtcars, aes(mpg, wt, colour = wt)) +
  geom_point() +
  geom_hline(aes(yintercept = wt, colour = wt), mean_wt) +
  facet_wrap(~ cyl)
}
\seealso{
See [geom_segment()] for a more general approach to
  adding straight line segments to a plot.
}
